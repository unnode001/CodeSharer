# CodeSharer/docker-compose.yml

version: "3.8"

services:
  # 服务1: 后端API应用
  api:
    build: . # 使用当前目录下的 Dockerfile 来构建镜像
    container_name: codesharer-api
    restart: unless-stopped
    ports:
      # 将主机的8000端口映射到容器的8000端口
      - "8000:8000"
    volumes:
      # 开发时可取消注释此行，实现代码热重载
      # - ./backend:/app/backend
      - ./data:/app/data # 如果后端需要读写本地文件，可挂载此卷
    env_file:
      - .env # 从 .env 文件加载环境变量
    environment:
      # 构造数据库连接URL，并传递给API容器
      # 格式: postgresql://<user>:<password>@<host>:<port>/<dbname>
      # 'db' 是下面定义的数据库服务的主机名
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}"
    depends_on:
      - db # 确保在api服务启动前，db服务已经启动

  # 服务2: PostgreSQL数据库
  db:
    image: postgres:14-alpine # 使用官方的PostgreSQL镜像 (轻量级Alpine版)
    container_name: codesharer-db
    restart: unless-stopped
    volumes:
      # 使用命名卷来持久化数据库数据，即使容器被删除，数据也不会丢失
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env # 从 .env 文件加载数据库的用户名、密码和库名

# 定义命名卷
volumes:
  postgres_data:
